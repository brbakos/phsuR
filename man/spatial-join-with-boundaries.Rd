% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-geocode-data.R
\name{spatial_join_with_boundaries}
\alias{spatial_join_with_boundaries}
\title{Attach Regional Data by Latitude and Longitude}
\usage{
spatial_join_with_boundaries(
  .data,
  coords = c("longitude", "latitude"),
  crs = 4326
)
}
\arguments{
\item{.data}{A `data.frame` containing the data to which regional information will be attached.}

\item{coords}{A character vector specifying the names of the columns holding geographic coordinates.
Defaults to `c("longitude", "latitude")`.}

\item{crs}{An integer specifying the Coordinate Reference System (CRS) of the input data.
Defaults to `4326` (WGS 84).}
}
\value{
A `data.frame` with the original data and additional columns from the `phsuR::chsa_boundaries` dataset.
}
\description{
This function performs a spatial join to attach regional boundary information from
`phsuR::chsa_boundaries` to a dataset based on geographic coordinates.
}
\details{
The input coordinate data is assumed to be in WGS 84 (EPSG:4326) by default. The function first
converts the data to a simple features (`sf`) object, then reprojects it to match the CRS of the
`phsuR::chsa_boundaries` dataset. A spatial join is performed to attach the corresponding
regional data. The resulting dataset is returned as a `data.frame`, with the `geometry` column removed.
}
\note{
The `geometry` column, created during the spatial join process, is dropped before the result
is returned. If the geometry is needed, you can modify the function to retain it.
}
\seealso{
\code{\link[sf]{st_as_sf}} for converting data to a spatial object and \code{\link[sf]{st_transform}} for CRS transformations.
}
