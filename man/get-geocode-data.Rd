% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-geocode-data.R
\name{get_geocode_data}
\alias{get_geocode_data}
\title{Request Geographic Data for an Address from the BC Address Geocoder API}
\usage{
get_geocode_data(address, api_key = NULL, faults = TRUE, rate_limit = 1000)
}
\arguments{
\item{address}{A character vector of addresses to geocode.}

\item{api_key}{Optionally, an API key for accessing the BC Address Geocoder API.
Defaults to `NULL`.}

\item{faults}{Logical. If `TRUE`, the function returns flagged issues for each address
(if any). The result will include a second `data.frame` named `faults`. Defaults to `TRUE`.}

\item{rate_limit}{Maximum number of requests allowed per minute. Defaults to 1000.
Use `NULL` for no rate limit.}
}
\value{
A geocoded dataset:
\describe{
  \item{faults = FALSE}{A single `data.frame` with geocoded data for each address.}
  \item{faults = TRUE}{A `list` with:
  \describe{
    \item{\code{data}}{A `data.frame` containing geocoded data for each address.}
    \item{\code{faults}}{A `data.frame` with one row per fault for any address that has faults.}
  }}
}
}
\description{
This function sends addresses to the BC Address Geocoder API and retrieves geocoded
data (latitude and longitude) along with any flagged issues ("faults") identified by
the API during the geocoding process.
}
\details{
You must ensure the quality of the addresses sent to the API for optimal results.
Including unnecessary information (e.g., "CANADA") may degrade the match quality.
The API is biased toward addresses in British Columbia; addresses outside the province
may produce mixed results or be incorrectly linked to BC locations.

The best address format for reliable results is:
`civic number` `street name`, `city name`, `province`.
}
\examples{
\dontrun{
addresses <- c("601 W Broadway, Vancouver, BC", "1081 Burrard St, Vancouver, BC")

## Geocode addresses with faults returned
result <- get_geocode_data(addresses)

## Geocoded data
geo_data <- result$data

## Faults (if any)
faults_data <- result$faults

## Geocode addresses without faults
geo_data <- get_geocode_data(addresses, faults = FALSE)
}

}
